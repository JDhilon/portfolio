{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Project.jsx","images/teslagames.jpg","projects.js","images/todo.png","images/dungeon.png","components/App.jsx","index.js"],"names":["Header","props","Navbar","expand","className","Container","Brand","href","Toggle","Collapse","id","Nav","Link","NavDropdown","title","projectNames","map","name","idx","console","log","Item","Footer","year","Date","getFullYear","classes","makeStyles","theme","root","color","useClasses","Project","isLeft","Row","Col","md","span","offset","proj","description","links","github","website","youtube","xs","Image","src","image","fluid","projects","teslagames","App","class","project","ReactDOM","render","document","getElementById"],"mappings":"2QAmCeA,MA1Bf,SAAgBC,GAQZ,OAAO,cAACC,EAAA,EAAD,CAAQC,OAAO,KAAKC,UAAU,SAA9B,SACH,eAACC,EAAA,EAAD,WAEQ,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,QAAnB,2BACA,cAACL,EAAA,EAAOM,OAAR,CAAe,gBAAc,qBAC7B,cAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,mBAApB,SACA,eAACC,EAAA,EAAD,CAAKP,UAAU,UAAf,UACI,cAACO,EAAA,EAAIC,KAAL,CAAUL,KAAK,WAAf,qBACA,cAACM,EAAA,EAAD,CAAaC,MAAM,WAAWJ,GAAG,qBAAjC,SAdLT,EAAMc,aAAaC,KAAI,SAACC,EAAMC,GAEjC,OADAC,QAAQC,IAAIH,GACL,cAACJ,EAAA,EAAYQ,KAAb,CAAkBd,KAAM,QAAUW,EAAlC,SAAwCD,oB,kECwB5CK,MAvBf,WACI,IAAMC,GAAO,IAAIC,MAAOC,cAYlBC,EATaC,aAAW,SAAAC,GAAK,MAAK,CACpCC,KAAM,CACF,UAAW,CACPC,MAAO,WAEXA,MAAO,cAICC,GAElB,OAAO,sBAAK3B,UAAU,SAAf,UACG,mBAAGG,KAAK,6BAAR,SAAqC,cAAC,IAAD,CAAYH,UAAWsB,EAAQG,SACpE,mBAAGtB,KAAK,0DAAR,SAAkE,cAAC,IAAD,CAAcH,UAAWsB,EAAQG,SACnG,mBAAGtB,KAAK,8BAAR,SAAsC,cAAC,IAAD,CAAUH,UAAWsB,EAAQG,SACnE,kDAAgBN,S,gECmEbS,MArFf,SAAiB/B,GAgBb,IASMyB,EATaC,aAAW,SAAAC,GAAK,MAAK,CACpCC,KAAM,CACF,UAAW,CACPC,MAAO,WAEXA,MAAO,cAICC,GAIhB,OAAG9B,EAAMgC,OACE,cAAC5B,EAAA,EAAD,CAAWD,UAAU,UAAUM,GAAIT,EAAMS,GAAzC,SACP,eAACwB,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAI,CAACC,KAAM,EAAGC,OAAQ,GAAIlC,UAAU,cAAzC,UACI,cAAC8B,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,6BAAKlC,EAAMsC,KAAKzB,YAGxB,cAACoB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,4BAAIlC,EAAMsC,KAAKC,kBAIvB,eAACN,EAAA,EAAD,WACkC,KAA5BjC,EAAMsC,KAAKE,MAAMC,OAAiB,KAAM,cAACP,EAAA,EAAD,UAAK,mBAAG5B,KAAMN,EAAMsC,KAAKE,MAAMC,OAA1B,SAAkC,cAAC,IAAD,CAAYtC,UAAWsB,EAAQG,WACjF,KAA7B5B,EAAMsC,KAAKE,MAAME,QAAkB,KAAO,cAACR,EAAA,EAAD,UAAK,mBAAG5B,KAAMN,EAAMsC,KAAKE,MAAME,QAA1B,SAAmC,cAAC,IAAD,CAAcvC,UAAWsB,EAAQG,WACtF,KAA7B5B,EAAMsC,KAAKE,MAAMG,QAAkB,KAAM,cAACT,EAAA,EAAD,UAAK,mBAAG5B,KAAMN,EAAMsC,KAAKE,MAAMG,QAA1B,SAAmC,cAAC,IAAD,CAAaxC,UAAWsB,EAAQG,iBAG3H,cAACM,EAAA,EAAD,CAAK/B,UAAU,uBAAuByC,GAAI,GAAIT,GAAI,CAACC,KAAM,EAAGC,OAAQ,GAApE,SACI,cAACQ,EAAA,EAAD,CAAOC,IAAK9C,EAAMsC,KAAKS,MAAOC,OAAK,WAMpC,cAAC5C,EAAA,EAAD,CAAWD,UAAU,UAAUM,GAAIT,EAAMS,GAAzC,SACP,eAACwB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAK/B,UAAU,uBAAuByC,GAAI,GAAIT,GAAI,EAAlD,SACI,cAACU,EAAA,EAAD,CAAOC,IAAK9C,EAAMsC,KAAKS,MAAOC,OAAK,MAEvC,eAACd,EAAA,EAAD,CAAKC,GAAI,CAACC,KAAM,EAAGC,OAAQ,GAAKlC,UAAU,cAA1C,UACI,cAAC8B,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,6BAAKlC,EAAMsC,KAAKzB,YAGxB,cAACoB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,4BAAIlC,EAAMsC,KAAKC,kBAIvB,eAACN,EAAA,EAAD,WACkC,KAA5BjC,EAAMsC,KAAKE,MAAMC,OAAiB,KAAM,cAACP,EAAA,EAAD,UAAK,mBAAG5B,KAAMN,EAAMsC,KAAKE,MAAMC,OAA1B,SAAkC,cAAC,IAAD,CAAYtC,UAAWsB,EAAQG,WACjF,KAA7B5B,EAAMsC,KAAKE,MAAME,QAAkB,KAAO,cAACR,EAAA,EAAD,UAAK,mBAAG5B,KAAMN,EAAMsC,KAAKE,MAAME,QAA1B,SAAmC,cAAC,IAAD,CAAcvC,UAAWsB,EAAQG,WACtF,KAA7B5B,EAAMsC,KAAKE,MAAMG,QAAkB,KAAM,cAACT,EAAA,EAAD,UAAK,mBAAG5B,KAAMN,EAAMsC,KAAKE,MAAMG,QAA1B,SAAmC,cAAC,IAAD,CAAaxC,UAAWsB,EAAQG,uBC5FxH,G,MAAA,IAA0B,wCC8C1BqB,EA1CE,CACb,CACIpC,MAAO,YACP0B,YAAY,0VAIZC,MAAO,CACHC,OAAQ,0CACRC,QAAS,8CACTC,QAAS,IAEbI,MChBO,IAA0B,kCDkBrC,CACIlC,MAAO,oBACP0B,YAAY,8pBAIZC,MAAO,CACHC,OAAQ,6CACRC,QAAS,6CACTC,QAAS,IAEbI,ME7BO,IAA0B,qCF+BrC,CACIlC,MAAO,cACP0B,YAAY,0fAIZC,MAAO,CACHC,OAAQ,8CACRC,QAAS,GACTC,QAAS,gEAEbI,MAAOG,IGbAC,MApBf,WAWI,OAAO,sBAAKC,MAAM,aAAX,UACH,cAAC,EAAD,CAAQtC,aAAcmC,EAASlC,KAAI,SAACuB,GAAU,OAAOA,EAAKzB,WAC1D,qBAAKuC,MAAM,cAAX,SATOH,EAASlC,KAAI,SAACsC,EAASpC,GAC1B,OAAO,cAAC,EAAD,CAASe,OAAQf,EAAI,IAAM,EAAGqB,KAAMe,EAAS5C,GAAI,OAASQ,SAWrE,cAAC,EAAD,Q,MClBRqC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a50d133e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport Navbar from \"react-bootstrap/Navbar\"\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport \"./Header.css\";\r\n\r\nfunction Header(props) {\r\n    function createProjectLinks() {\r\n        return props.projectNames.map((name, idx) => {\r\n            console.log(name);\r\n            return <NavDropdown.Item href={\"#proj\" + idx}>{name}</NavDropdown.Item>;\r\n        })\r\n    }\r\n\r\n    return <Navbar expand=\"lg\" className=\"header\">\r\n        <Container>\r\n                {/* TODO: Make this an icon/logo*/}\r\n                <Navbar.Brand href=\"#home\">Jashan Dhilon</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"ms-auto\">\r\n                    <Nav.Link href=\"#contact\">Contact</Nav.Link>\r\n                    <NavDropdown title=\"Projects\" id=\"basic-nav-dropdown\">\r\n                    {/* TODO: Make Navbar fixed to top, and make anchor tags leave padding*/}\r\n                    {createProjectLinks()}\r\n                    </NavDropdown>\r\n                </Nav>\r\n                </Navbar.Collapse>\r\n        </Container>\r\n    </Navbar>;\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nimport { makeStyles } from '@mui/styles'\r\n\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\n\r\nimport './Footer.css';\r\n\r\nfunction Footer() {\r\n    const year = new Date().getFullYear();\r\n\r\n    // Using MaterialUI options to create custom styles for hover effects on icons\r\n    const useClasses = makeStyles(theme => ({\r\n        root: {\r\n            \"&:hover\": {\r\n                color: '#da6d15',\r\n            },\r\n            color: '#C06014',\r\n        },\r\n        }))\r\n\r\n    const classes = useClasses();\r\n\r\n  return <div className=\"footer\">\r\n            <a href=\"https://github.com/JDhilon\"><GitHubIcon className={classes.root}></GitHubIcon></a>\r\n            <a href=\"https://www.linkedin.com/in/jashanjot-dhilon-9457b0125/\"><LinkedInIcon className={classes.root}></LinkedInIcon></a>\r\n            <a href=\"mailto:jdhilondev@gmail.com\"><MailIcon className={classes.root}></MailIcon></a>\r\n            <p>Copyright â“’ {year}</p>\r\n        </div>;\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nimport { makeStyles } from '@mui/styles'\r\n\r\nimport LanguageIcon from '@mui/icons-material/Language';\r\nimport YouTubeIcon from '@mui/icons-material/YouTube';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\n\r\nimport './Project.css';\r\n\r\nfunction Project(props) {\r\n\r\n    /* Project should include:\r\n        {\r\n            Title: string\r\n            Description: string\r\n            Image: string\r\n            Links: {\r\n                GitHub: string,\r\n                Website: string,\r\n                YouTube: string\r\n                }\r\n        }\r\n    */\r\n\r\n    // Using MaterialUI options to create custom styles for hover effects on icons\r\n    const useClasses = makeStyles(theme => ({\r\n        root: {\r\n            \"&:hover\": {\r\n                color: '#da6d15',\r\n            },\r\n            color: '#C06014',\r\n        },\r\n    }))\r\n\r\n    const classes = useClasses();\r\n\r\n    // Determine which orientation the content should take\r\n    // TODO: Add listener to also make sure screen is NOT xs\r\n    if(props.isLeft) {\r\n        return <Container className=\"project\" id={props.id}>\r\n        <Row>\r\n            <Col md={{span: 3, offset: 0}} className=\"description\">\r\n                <Row>\r\n                    <Col>\r\n                        <h1>{props.proj.title}</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <p>{props.proj.description}</p>\r\n                    </Col>\r\n                </Row>\r\n                {/*TODO: Align these links to the bottom of the column*/}\r\n                <Row>\r\n                    {(props.proj.links.github === \"\") ? null :<Col><a href={props.proj.links.github}><GitHubIcon className={classes.root}></GitHubIcon></a></Col>}\r\n                    {(props.proj.links.website === \"\") ? null : <Col><a href={props.proj.links.website}><LanguageIcon className={classes.root}></LanguageIcon></a></Col>}\r\n                    {(props.proj.links.youtube === \"\") ? null :<Col><a href={props.proj.links.youtube}><YouTubeIcon className={classes.root}></YouTubeIcon></a></Col>}\r\n                </Row>\r\n            </Col>\r\n            <Col className=\"my-auto previewImage\" xs={12} md={{span: 6, offset: 3}}>\r\n                <Image src={props.proj.image} fluid />\r\n            </Col>\r\n        </Row>\r\n        </Container>;\r\n    }\r\n    else {\r\n        return <Container className=\"project\" id={props.id}>\r\n        <Row>\r\n            <Col className=\"my-auto previewImage\" xs={12} md={6}>\r\n                <Image src={props.proj.image} fluid />\r\n            </Col>\r\n            <Col md={{span: 3, offset: 3}}  className=\"description\">\r\n                <Row>\r\n                    <Col>\r\n                        <h1>{props.proj.title}</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <p>{props.proj.description}</p>\r\n                    </Col>\r\n                </Row>\r\n                {/*TODO: Align these links to the bottom of the column*/}\r\n                <Row>\r\n                    {(props.proj.links.github === \"\") ? null :<Col><a href={props.proj.links.github}><GitHubIcon className={classes.root}></GitHubIcon></a></Col>}\r\n                    {(props.proj.links.website === \"\") ? null : <Col><a href={props.proj.links.website}><LanguageIcon className={classes.root}></LanguageIcon></a></Col>}\r\n                    {(props.proj.links.youtube === \"\") ? null :<Col><a href={props.proj.links.youtube}><YouTubeIcon className={classes.root}></YouTubeIcon></a></Col>}\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n        </Container>;\r\n    }\r\n}\r\n\r\nexport default Project;","export default __webpack_public_path__ + \"static/media/teslagames.ed313a23.jpg\";","import teslagames from './images/teslagames.jpg';\r\nimport todo from './images/todo.png';\r\nimport dungeon from './images/dungeon.png';\r\n\r\nconst projects = [\r\n    {\r\n        title: \"ToDo List\",\r\n        description: `An online todo list, with secure authentication. \r\n            Features include the list being stored via MongoDB to allow users to access it from anywhere, with a secure login for authentication.\r\n            Development build includes use of Google OAuth2.0 for authentication.\r\n            The site itself is rendered using EJS and Node.js.`,\r\n        links: {\r\n            github: \"https://github.com/JDhilon/todo-list-v2\",\r\n            website: \"https://boiling-hamlet-45674.herokuapp.com/\",\r\n            youtube: \"\"\r\n        },\r\n        image: todo\r\n    },\r\n    {\r\n        title: \"Dungeon Generator\",\r\n        description: `This is a work in progress dungeon generation application for making easy and fun maps for use in tabletop roleplaying games, such as Dungeon and Dragons.\r\n                    The site is created using React, and allows a user to enter in parameters for random dungeon generation. \r\n                    Links between rooms are created using a graph data structure and a pseudorandom algorithm for creating a anything from a linear design to a maze-like structure.\r\n                    Future updates for this project include automatically exporting the finished map to an online TTRPG tool, such as Roll20, and giving users a set of tools to update the generated map.`,\r\n        links: {\r\n            github: \"https://github.com/JDhilon/dungeon-gen-app\",\r\n            website: \"https://jdhilon.github.io/dungeon-gen-app/\",\r\n            youtube: \"\"\r\n        },\r\n        image: dungeon\r\n    },\r\n    {\r\n        title: \"Tesla Games\",\r\n        description: `Tesla Games is a car racing and battle computer game, developed as part of a team project.\r\n            Players are sent into a race course, where they rely on their skillful driving, and clever ability usage to survive until the end. \r\n            You can play the game either by yourself against a competitive AI, or team up with friends to play a local splitscreen multiplayer game.\r\n            The game itself is packaged for use on Windows 10, and makes use of libraries such as OpenGL and PhysX. `,\r\n        links: {\r\n            github: \"https://github.com/JuandeReiset/Tesla-Games\",\r\n            website: \"\",\r\n            youtube: \"https://www.youtube.com/watch?v=ftquclzoR98&feature=youtu.be\"\r\n        },\r\n        image: teslagames\r\n    }\r\n];\r\n\r\nexport default projects;","export default __webpack_public_path__ + \"static/media/todo.d03f3ee3.png\";","export default __webpack_public_path__ + \"static/media/dungeon.e81f2fd0.png\";","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Project from \"./Project\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport projects from \"../projects\";\r\n\r\nfunction App() {\r\n\r\n    // Creates Project components based on a list passed in\r\n    function createProjects(projectList) {\r\n        return projects.map((project, idx) => {\r\n            return <Project isLeft={idx%2 === 0} proj={project} id={\"proj\" + idx}/>;\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    return <div class=\"background\">\r\n        <Header projectNames={projects.map((proj) => {return proj.title;})}/>\r\n        <div class=\"projectList\">\r\n            {createProjects(projects)}\r\n        </div>\r\n        <Footer />\r\n    </div>;\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}